version: '3.8'

networks:
  web_net:
    external: true
    name: web_net
  app_net:
    external: true
    name: app_net

services:
  fleet:
    image: elastic/elastic-agent:${ELK_VERSION}
    restart: ${RESTART_POLICY}
    container_name: fleet
    hostname: "${FLEET_SUB_DOMAIN}.${DOMAIN_NAME}"
    environment:
      ELASTICSEARCH_HOST: ${ELASTICSEARCH_HOSTNAME}
      ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME}
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD}
      FLEET_SERVER_ENABLE: true
      FLEET_SERVER_ELASTICSEARCH_HOST: ${ELASTICSEARCH_HOSTNAME}
      FLEET_SERVER_INSECURE_HTTP: true
      KIBANA_FLEET_SETUP: true
      KIBANA_FLEET_HOST: ${KIBANA_HOSTNAME}
      FLEET_SERVER_HOST: 0.0.0.0
      FLEET_SERVER_PORT: 8220
    networks:
      - app_net
      - web_net
    healthcheck:
      test: "curl -f http://127.0.0.1:8220/api/status | grep HEALTHY 2>&1 >/dev/null"
      retries: 12
      interval: 5s
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web_net"
      - "traefik.http.routers.fleet.entrypoints=http"
      - "traefik.http.routers.fleet.rule=Host(`${FLEET_SUB_DOMAIN}.${DOMAIN_NAME}`)"
      - "traefik.http.routers.fleet.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.fleet-secure.entrypoints=https"
      - "traefik.http.routers.fleet-secure.rule=Host(`${FLEET_SUB_DOMAIN}.${DOMAIN_NAME}`)"
      - "traefik.http.routers.fleet-secure.tls=true"
      - "traefik.http.routers.fleet-secure.tls.options=default"
      - "traefik.http.routers.fleet-secure.tls.certresolver=mycert"
      - "traefik.http.services.fleet.loadbalancer.server.port=8220"